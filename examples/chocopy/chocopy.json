{
  "config": {
    "TERMINALS": ["class", "ID", "IDSTR", "STR", "(", ")", ":", "NEWLINE", "INDENT", "DEDENT", "pass", "def", "=", "global", "nonlocal", "[", "]", "if", "while", "for", "in", "pass", "return", "elif", "else", "not", "and", "or", "~", ".", "+", "-", "*", "//", "%", "==", "!=", "<=", ">=", "<", ">", "is", "None", "True", "False", "INT", "->", ","],
    "NONTERMINALS": ["program", "class_def", "class_body", "func_def", "func_body", "var_def", "definition", "var_func_def", "func_decl", "global_decl", "nonlocal_decl", "typed_var", "type", "stmt", "simple_stmt", "block", "elif_block", "else_block", "expr", "cexpr", "member_expr", "index_expr", "target", "bin_op", "literal", "arglist", "comma_typed_var", "rv_type_decl", "exprlist", "comma_expr", "target_eq", "_var_func_def_plus", "_stmt_plus", "_target_eq_plus", "_definition_star", "_stmt_star", "_func_decl_star", "_elif_block_star", "_comma_typed_var_star", "_comma_expr_star", "_arglist_one_or_none", "_rv_type_decl_one_or_none", "_else_block_one_or_none", "_expr_one_or_none", "_exprlist_one_or_none"],
    "NUM_RULES": 200,
    "MAX_RHS_LEN": 25,
    "POS_EXAMPLES": 100,
    "NEG_EXAMPLES": 100,
    "MAX_NEG_EXAMPLE_SIZE": 100,
    "MAX_TREE_DEPTH": 10,
    "GUIDE": []
  },
  "grammar": {
    "start": "program",
    "rules": [{
      "start": "program",
      "bodies": [
        ["_definition_star", "_stmt_star"]
      ]
    }, {
      "start": "class_def",
      "bodies": [
        ["class", "ID", "(", "ID", ")", ":", "NEWLINE", "INDENT", "class_body", "DEDENT"]
      ]
    }, {
      "start": "class_body",
      "bodies": [
        ["pass", "NEWLINE"],
        ["_var_func_def_plus"]
      ]
    }, {
      "start": "func_def",
      "bodies": [
        ["def", "ID", "(", "_arglist_one_or_none", ")", "_rv_type_decl_one_or_none", ":", "NEWLINE", "INDENT", "func_body", "DEDENT"]
      ]
    }, {
      "start": "func_body",
      "bodies": [
        ["_func_decl_star", "_stmt_plus"]
      ]
    }, {
      "start": "var_def",
      "bodies": [
        ["typed_var", "=", "literal", "NEWLINE"]
      ]
    }, {
      "start": "definition",
      "bodies": [
        ["var_func_def"],
        ["class_def"]
      ]
    }, {
      "start": "var_func_def",
      "bodies": [
        ["var_def"],
        ["func_def"]
      ]
    }, {
      "start": "func_decl",
      "bodies": [
        ["global_decl"],
        ["nonlocal_decl"],
        ["var_func_def"]
      ]
    }, {
      "start": "global_decl",
      "bodies": [
        ["global", "ID", "NEWLINE"]
      ]
    }, {
      "start": "nonlocal_decl",
      "bodies": [
        ["nonlocal", "ID", "NEWLINE"]
      ]
    }, {
      "start": "typed_var",
      "bodies": [
        ["ID", ":", "type"]
      ]
    }, {
      "start": "type",
      "bodies": [
        ["ID"],
        ["IDSTR"],
        ["[", "type", "]"]
      ]
    }, {
      "start": "stmt",
      "bodies": [
        ["simple_stmt", "NEWLINE"],
        ["if", "expr", ":", "block", "_elif_block_star", "_else_block_one_or_none"],
        ["while", "expr", ":", "block"],
        ["for", "ID", "in", "expr", ":", "block"]
      ]
    }, {
      "start": "simple_stmt",
      "bodies": [
        ["pass"],
        ["expr"],
        ["return", "_expr_one_or_none"],
        ["_target_eq_plus", "expr"]
      ]
    }, {
      "start": "block",
      "bodies": [
        ["NEWLINE", "INDENT", "_stmt_plus", "DEDENT"]
      ]
    }, {
      "start": "elif_block",
      "bodies": [
        ["elif", "expr", ":", "block"]
      ]
    }, {
      "start": "else_block",
      "bodies": [
        ["else", ":", "block"]
      ]
    }, {
      "start": "expr",
      "bodies": [
        ["cexpr"],
        ["not", "expr"],
        ["expr", "and", "expr"],
        ["expr", "or", "expr"],
        ["expr", "if", "expr", "else", "expr"]
      ]
    }, {
      "start": "cexpr",
      "bodies": [
        ["ID"],
        ["literal"],
        ["[", "_exprlist_one_or_none", "]"],
        ["(", "expr", ")"],
        ["member_expr"],
        ["index_expr"],
        ["member_expr", "(", "_exprlist_one_or_none", ")"],
        ["ID", "(", "_exprlist_one_or_none", ")"],
        ["cexpr", "bin_op", "cexpr"],
        ["~", "cexpr"]
      ]
    }, {
      "start": "member_expr",
      "bodies": [
        ["cexpr", ".", "ID"]
      ]
    }, {
      "start": "index_expr",
      "bodies": [
        ["cexpr", "[", "expr", "]"]
      ]
    }, {
      "start": "target",
      "bodies": [
        ["ID"],
        ["member_expr"],
        ["index_expr"]
      ]
    }, {
      "start": "bin_op",
      "bodies": [
        ["+"],
        ["-"],
        ["*"],
        ["//"],
        ["%"],
        ["=="],
        ["!="],
        ["<="],
        [">="],
        ["<"],
        [">"],
        ["is"]
      ]
    }, {
      "start": "literal",
      "bodies": [
        ["None"],
        ["True"],
        ["False"],
        ["INT"],
        ["IDSTR"],
        ["STR"]
      ]
    }, {
      "start": "arglist",
      "bodies": [
        ["typed_var", "_comma_typed_var_star"]
      ]
    }, {
      "start": "comma_typed_var",
      "bodies": [
        [",", "typed_var"]
      ]
    }, {
      "start": "rv_type_decl",
      "bodies": [
        ["->", "type"]
      ]
    }, {
      "start": "exprlist",
      "bodies": [
        ["expr", "_comma_expr_star"]
      ]
    }, {
      "start": "comma_expr",
      "bodies": [
        [",", "expr"]
      ]
    }, {
      "start": "target_eq",
      "bodies": [
        ["target", "="]
      ]
    }, {
      "start": "_var_func_def_plus",
      "bodies": [
        ["_var_func_def_plus", "var_func_def"],
        ["var_func_def"]
      ]
    }, {
      "start": "_stmt_plus",
      "bodies": [
        ["_stmt_plus", "stmt"],
        ["stmt"]
      ]
    }, {
      "start": "_target_eq_plus",
      "bodies": [
        ["_target_eq_plus", "target_eq"],
        ["target_eq"]
      ]
    }, {
      "start": "_definition_star",
      "bodies": [
        ["_definition_star", "definition"],
        [""]
      ]
    }, {
      "start": "_stmt_star",
      "bodies": [
        ["_stmt_star", "stmt"],
        [""]
      ]
    }, {
      "start": "_func_decl_star",
      "bodies": [
        ["_func_decl_star", "func_decl"],
        [""]
      ]
    }, {
      "start": "_elif_block_star",
      "bodies": [
        ["_elif_block_star", "elif_block"],
        [""]
      ]
    }, {
      "start": "_comma_typed_var_star",
      "bodies": [
        ["_comma_typed_var_star", "comma_typed_var"],
        [""]
      ]
    }, {
      "start": "_comma_expr_star",
      "bodies": [
        ["_comma_expr_star", "comma_expr"],
        [""]
      ]
    }, {
      "start": "_arglist_one_or_none",
      "bodies": [
        ["arglist"],
        [""]
      ]
    }, {
      "start": "_rv_type_decl_one_or_none",
      "bodies": [
        ["rv_type_decl"],
        [""]
      ]
    }, {
      "start": "_else_block_one_or_none",
      "bodies": [
        ["else_block"],
        [""]
      ]
    }, {
      "start": "_expr_one_or_none",
      "bodies": [
        ["expr"],
        [""]
      ]
    }, {
      "start": "_exprlist_one_or_none",
      "bodies": [
        ["exprlist"],
        [""]
      ]
    }]
  }
}
