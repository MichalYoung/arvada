# Terminals
L, =, if, then, else, ;, while, do, skip, true, false, ==, & , ~, n, (, ), +

# Grammar
# The first rule in the grammar specifies the start nonterminal
stmt := L = expr
  | if bool then stmt else stmt
  | stmt ; stmt
  | while bool do stmt
  | skip

bool := true | false | expr == expr | bool & bool | ~ bool

expr := L | n | ( expr + expr )
